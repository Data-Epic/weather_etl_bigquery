name: Airflow DAG CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pylint black
    
    - name: Run Black formatter check
      run: |
        black --check dags/
    
    - name: Run Pylint
      run: |
        pylint --disable=C,R,W dags/*.py

  deploy-to-airflow:
    needs: test-and-lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    - name: Authenticate with Google Cloud
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" > /tmp/service-account.json
        gcloud auth activate-service-account --key-file=/tmp/service-account.json
    
    - name: Deploy DAG to Cloud Storage
      run: |
        # Replace with your GCS bucket where Airflow looks for DAGs
        gsutil cp dags/weather_dag.py gs://your-airflow-dags-bucket/dags/
    
    - name: Verify BigQuery Dataset
      run: |
        bq mk --dataset \
          --description "Weather Data ETL Dataset" \
          ${{ secrets.GCP_PROJECT_ID }}:weather_data

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    - name: Install security scanning tools
      run: |
        pip install bandit safety
    
    - name: Run Bandit security scan
      run: |
        bandit -r dags/
    
    - name: Check dependencies for known vulnerabilities
      run: |
        safety check
